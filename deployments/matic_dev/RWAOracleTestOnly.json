{
  "address": "0x37Cd0ba94F6F1803226463C21f12AAAC032e8352",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startingPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "oldChainlinkPrice",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint80",
          "name": "oldRoundId",
          "type": "uint80"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "newChainlinkPrice",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint80",
          "name": "newRoundId",
          "type": "uint80"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "oldRWAPrice",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "newRWAPrice",
          "type": "int256"
        }
      ],
      "name": "RWAExternalComparisonCheckPriceSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getPriceData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
  "receipt": {
    "to": null,
    "from": "0x6F368F8e9828d6F9530fD3E2300c2376312df1A6",
    "contractAddress": "0x37Cd0ba94F6F1803226463C21f12AAAC032e8352",
    "transactionIndex": 45,
    "gasUsed": "320680",
    "logsBloom": "0x
    "blockHash": "0x379588a73a846ddcc7cb98e1e44a3a3744bd8574080984c1c615f73f368e02c3",
    "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
    "logs": [
      {
        "transactionIndex": 45,
        "blockNumber": 50260378,
        "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
        "address": "0x37Cd0ba94F6F1803226463C21f12AAAC032e8352",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006f368f8e9828d6f9530fd3e2300c2376312df1a6"
        ],
        "data": "0x",
        "logIndex": 588,
        "blockHash": "0x379588a73a846ddcc7cb98e1e44a3a3744bd8574080984c1c615f73f368e02c3"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 50260378,
        "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
        "address": "0x37Cd0ba94F6F1803226463C21f12AAAC032e8352",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000006f368f8e9828d6f9530fd3e2300c2376312df1a6",
          "0x0000000000000000000000003d7a5edfcdca0f9fdd066fb94d306f2b4cc7db17"
        ],
        "data": "0x",
        "logIndex": 589,
        "blockHash": "0x379588a73a846ddcc7cb98e1e44a3a3744bd8574080984c1c615f73f368e02c3"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 50260378,
        "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
        "address": "0x37Cd0ba94F6F1803226463C21f12AAAC032e8352",
        "topics": [
          "0x3cc2938e8035ab592372e28987d89549a1f8bb703601bc3dbd894f18f5c20a06",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056bc75e2d63100000",
        "logIndex": 590,
        "blockHash": "0x379588a73a846ddcc7cb98e1e44a3a3744bd8574080984c1c615f73f368e02c3"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 50260378,
        "transactionHash": "0xc1cf7f05e9d0b48833832da3c5f7ce1830bcfff630440a3b8ed262794cbe10b9",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000006f368f8e9828d6f9530fd3e2300c2376312df1a6",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000222dbcfd7a7fd80000000000000000000000000000000000000000000000008bb979add632748d0000000000000000000000000000000000000000000020a581dcbe605c2c9d340000000000000000000000000000000000000000000000008b974bf0d8b7f4b50000000000000000000000000000000000000000000020a581feec1d59a71d0c",
        "logIndex": 591,
        "blockHash": "0x379588a73a846ddcc7cb98e1e44a3a3744bd8574080984c1c615f73f368e02c3"
      }
    ],
    "blockNumber": 50260378,
    "cumulativeGasUsed": "19484183",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3d7a5eDFCDCA0f9FDD066Fb94D306f2b4Cc7DB17",
    "100000000000000000000"
  ],
  "solcInputHash": "55edd8790aa902fc29817753615244cc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startingPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"oldChainlinkPrice\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint80\",\"name\":\"oldRoundId\",\"type\":\"uint80\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"newChainlinkPrice\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint80\",\"name\":\"newRoundId\",\"type\":\"uint80\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"oldRWAPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"newRWAPrice\",\"type\":\"int256\"}],\"name\":\"RWAExternalComparisonCheckPriceSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPriceData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPriceData()\":{\"notice\":\"Retrieve RWA price data\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/RWAOracleTestOnly.sol\":\"RWAOracleTestOnly\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/external/openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"contracts/external/openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    _transferOwnership(_msgSender());\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    _transferOwnership(address(0));\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Internal function without access restriction.\\n   */\\n  function _transferOwnership(address newOwner) internal virtual {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n}\\n\",\"keccak256\":\"0xbf98487e973eb344f5ba44644c1bc13a4bbabff2b7d9c90f2550d5b92a241c0d\",\"license\":\"MIT\"},\"contracts/external/openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes calldata) {\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0x197651ff7207345936e19940e36235967fe866449caa294e19642b6c6aaa62f8\",\"license\":\"MIT\"},\"contracts/interfaces/IRWAOracle.sol\":{\"content\":\"/**SPDX-License-Identifier: BUSL-1.1\\n\\n      \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\n   \\u2553\\u2588\\u2588\\u2580\\u2514 ,\\u2553\\u2584\\u2584\\u2584, '\\u2580\\u2588\\u2588\\u2584\\n  \\u2588\\u2588\\u2580 \\u2584\\u2588\\u2588\\u2580\\u2580\\u2559\\u2559\\u2580\\u2580\\u2588\\u2588\\u2584 \\u2514\\u2588\\u2588\\u00b5           ,,       ,,      ,     ,,,            ,,,\\n \\u2588\\u2588 ,\\u2588\\u2588\\u00ac \\u2584\\u2588\\u2588\\u2588\\u2588\\u2584  \\u2580\\u2588\\u2584 \\u2559\\u2588\\u2584      \\u2584\\u2588\\u2588\\u2588\\u2580\\u2580\\u2588\\u2588\\u2588\\u2584   \\u2588\\u2588\\u2588\\u2584    \\u2588\\u2588  \\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2588\\u2588\\u2588\\u2584    \\u2584\\u2588\\u2588\\u2588\\u2580\\u2580\\u2588\\u2588\\u2588,\\n\\u2588\\u2588  \\u2588\\u2588 \\u2552\\u2588\\u2580'   \\u2559\\u2588\\u258c \\u2559\\u2588\\u258c \\u2588\\u2588     \\u2590\\u2588\\u2588      \\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588,  \\u2588\\u2588  \\u2588\\u2588\\u258c    \\u2514\\u2588\\u2588\\u258c  \\u2588\\u2588\\u258c     \\u2514\\u2588\\u2588\\u258c\\n\\u2588\\u2588 \\u2590\\u2588\\u258c \\u2588\\u2588      \\u255f\\u2588  \\u2588\\u258c \\u255f\\u2588     \\u2588\\u2588\\u258c      \\u2590\\u2588\\u2588  \\u2588\\u2588 \\u2514\\u2588\\u2588\\u2588 \\u2588\\u2588  \\u2588\\u2588\\u258c     \\u255f\\u2588\\u2588 j\\u2588\\u2588       \\u255f\\u2588\\u2588\\n\\u255f\\u2588  \\u2588\\u2588 \\u2559\\u2588\\u2588    \\u2584\\u2588\\u2580 \\u2590\\u2588\\u258c \\u2588\\u2588     \\u2559\\u2588\\u2588      \\u2588\\u2588\\u258c  \\u2588\\u2588   \\u2559\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u258c    \\u2584\\u2588\\u2588\\u2580  \\u2588\\u2588\\u258c     ,\\u2588\\u2588\\u2580\\n \\u2588\\u2588 \\\"\\u2588\\u2588, \\u2559\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2310      \\u2559\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588     \\u2559\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580     \\u2559\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580`\\n  \\u2588\\u2588\\u2584 \\u2559\\u2580\\u2588\\u2588\\u2584\\u2584\\u2584\\u2584\\u2584,,,                \\u00ac\\u2500                                    '\\u2500\\u00ac\\n   \\u2559\\u2580\\u2588\\u2588\\u2584 '\\u2559\\u2559\\u2559\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\n      \\u2559\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588R\\u2310\\n\\n */\\npragma solidity 0.8.16;\\n\\ninterface IRWAOracle {\\n  /// @notice Retrieve RWA price data\\n  function getPriceData()\\n    external\\n    view\\n    returns (uint256 price, uint256 timestamp);\\n}\\n\",\"keccak256\":\"0x92173ba8830b79f9be99b2d296a4ddd62f4026fe571ba5a1a0b8bf69501582c5\",\"license\":\"BUSL-1.1\"},\"contracts/test/RWAOracleTestOnly.sol\":{\"content\":\"/**SPDX-License-Identifier: BUSL-1.1\\n\\n      \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\n   \\u2553\\u2588\\u2588\\u2580\\u2514 ,\\u2553\\u2584\\u2584\\u2584, '\\u2580\\u2588\\u2588\\u2584\\n  \\u2588\\u2588\\u2580 \\u2584\\u2588\\u2588\\u2580\\u2580\\u2559\\u2559\\u2580\\u2580\\u2588\\u2588\\u2584 \\u2514\\u2588\\u2588\\u00b5           ,,       ,,      ,     ,,,            ,,,\\n \\u2588\\u2588 ,\\u2588\\u2588\\u00ac \\u2584\\u2588\\u2588\\u2588\\u2588\\u2584  \\u2580\\u2588\\u2584 \\u2559\\u2588\\u2584      \\u2584\\u2588\\u2588\\u2588\\u2580\\u2580\\u2588\\u2588\\u2588\\u2584   \\u2588\\u2588\\u2588\\u2584    \\u2588\\u2588  \\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2588\\u2588\\u2588\\u2584    \\u2584\\u2588\\u2588\\u2588\\u2580\\u2580\\u2588\\u2588\\u2588,\\n\\u2588\\u2588  \\u2588\\u2588 \\u2552\\u2588\\u2580'   \\u2559\\u2588\\u258c \\u2559\\u2588\\u258c \\u2588\\u2588     \\u2590\\u2588\\u2588      \\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588,  \\u2588\\u2588  \\u2588\\u2588\\u258c    \\u2514\\u2588\\u2588\\u258c  \\u2588\\u2588\\u258c     \\u2514\\u2588\\u2588\\u258c\\n\\u2588\\u2588 \\u2590\\u2588\\u258c \\u2588\\u2588      \\u255f\\u2588  \\u2588\\u258c \\u255f\\u2588     \\u2588\\u2588\\u258c      \\u2590\\u2588\\u2588  \\u2588\\u2588 \\u2514\\u2588\\u2588\\u2588 \\u2588\\u2588  \\u2588\\u2588\\u258c     \\u255f\\u2588\\u2588 j\\u2588\\u2588       \\u255f\\u2588\\u2588\\n\\u255f\\u2588  \\u2588\\u2588 \\u2559\\u2588\\u2588    \\u2584\\u2588\\u2580 \\u2590\\u2588\\u258c \\u2588\\u2588     \\u2559\\u2588\\u2588      \\u2588\\u2588\\u258c  \\u2588\\u2588   \\u2559\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u258c    \\u2584\\u2588\\u2588\\u2580  \\u2588\\u2588\\u258c     ,\\u2588\\u2588\\u2580\\n \\u2588\\u2588 \\\"\\u2588\\u2588, \\u2559\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2310      \\u2559\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588     \\u2559\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580     \\u2559\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580`\\n  \\u2588\\u2588\\u2584 \\u2559\\u2580\\u2588\\u2588\\u2584\\u2584\\u2584\\u2584\\u2584,,,                \\u00ac\\u2500                                    '\\u2500\\u00ac\\n   \\u2559\\u2580\\u2588\\u2588\\u2584 '\\u2559\\u2559\\u2559\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\n      \\u2559\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588R\\u2310\\n\\n */\\n\\nimport \\\"contracts/interfaces/IRWAOracle.sol\\\";\\nimport \\\"contracts/external/openzeppelin/contracts/access/Ownable.sol\\\";\\n\\npragma solidity 0.8.16;\\n\\ncontract RWAOracleTestOnly is IRWAOracle, Ownable {\\n  // Matches contracts/rwaOracles/IRWAOracleExternalComparisonCheck.sol\\n  event RWAExternalComparisonCheckPriceSet(\\n    int256 oldChainlinkPrice,\\n    uint80 indexed oldRoundId,\\n    int256 newChainlinkPrice,\\n    uint80 indexed newRoundId,\\n    int256 oldRWAPrice,\\n    int256 newRWAPrice\\n  );\\n  uint256 public price;\\n  uint256 public timestamp;\\n\\n  constructor(address owner, uint256 _startingPrice) {\\n    transferOwnership(owner);\\n    price = _startingPrice;\\n    timestamp = block.timestamp;\\n    emit RWAExternalComparisonCheckPriceSet(\\n      0,\\n      0,\\n      0,\\n      0,\\n      0,\\n      int256(_startingPrice)\\n    );\\n  }\\n\\n  function getPriceData() external view override returns (uint256, uint256) {\\n    return (price, timestamp);\\n  }\\n\\n  function setPrice(uint256 _price) external onlyOwner {\\n    emit RWAExternalComparisonCheckPriceSet(\\n      0,\\n      0,\\n      0,\\n      0,\\n      int256(price),\\n      int256(_price)\\n    );\\n    price = _price;\\n    timestamp = block.timestamp;\\n  }\\n}\\n\",\"keccak256\":\"0xa7a0dcdf5085ff5eb4bae1f23c43f32b24358b3e17e7c2bcf040eede5d65f102\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161056538038061056583398101604081905261002f916101bd565b6100383361009d565b610041826100ed565b600181905542600255604080516000808252602082018190529181018290526060810183905281907f3cc2938e8035ab592372e28987d89549a1f8bb703601bc3dbd894f18f5c20a069060800160405180910390a350506101f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b0316331461014c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610143565b6101ba8161009d565b50565b600080604083850312156101d057600080fd5b82516001600160a01b03811681146101e757600080fd5b6020939093015192949293505050565b61035f806102066000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c8063715018a6146100725780638da5cb5b1461007c57806391b7f5ed1461009c578063a035b1fe146100af578063a4a28168146100c6578063b80777ea146100e1578063f2fde38b146100ea575b600080fd5b61007a6100fd565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100aa3660046102ab565b61013c565b6100b860015481565b604051908152602001610093565b60015460025460408051928352602083019190915201610093565b6100b860025481565b61007a6100f83660046102c4565b6101c0565b6000546001600160a01b031633146101305760405162461bcd60e51b8152600401610127906102f4565b60405180910390fd5b61013a600061025b565b565b6000546001600160a01b031633146101665760405162461bcd60e51b8152600401610127906102f4565b6001546040805160008082526020820181905291810192909252606082018390529081907f3cc2938e8035ab592372e28987d89549a1f8bb703601bc3dbd894f18f5c20a069060800160405180910390a360015542600255565b6000546001600160a01b031633146101ea5760405162461bcd60e51b8152600401610127906102f4565b6001600160a01b03811661024f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b6102588161025b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102bd57600080fd5b5035919050565b6000602082840312156102d657600080fd5b81356001600160a01b03811681146102ed57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212209a9687ff3a0853eb9413929a38d78119c99708dd0b1a5dd195a3e239217ba52864736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c8063715018a6146100725780638da5cb5b1461007c57806391b7f5ed1461009c578063a035b1fe146100af578063a4a28168146100c6578063b80777ea146100e1578063f2fde38b146100ea575b600080fd5b61007a6100fd565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100aa3660046102ab565b61013c565b6100b860015481565b604051908152602001610093565b60015460025460408051928352602083019190915201610093565b6100b860025481565b61007a6100f83660046102c4565b6101c0565b6000546001600160a01b031633146101305760405162461bcd60e51b8152600401610127906102f4565b60405180910390fd5b61013a600061025b565b565b6000546001600160a01b031633146101665760405162461bcd60e51b8152600401610127906102f4565b6001546040805160008082526020820181905291810192909252606082018390529081907f3cc2938e8035ab592372e28987d89549a1f8bb703601bc3dbd894f18f5c20a069060800160405180910390a360015542600255565b6000546001600160a01b031633146101ea5760405162461bcd60e51b8152600401610127906102f4565b6001600160a01b03811661024f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b6102588161025b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102bd57600080fd5b5035919050565b6000602082840312156102d657600080fd5b81356001600160a01b03811681146102ed57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212209a9687ff3a0853eb9413929a38d78119c99708dd0b1a5dd195a3e239217ba52864736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPriceData()": {
        "notice": "Retrieve RWA price data"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10707,
        "contract": "contracts/test/RWAOracleTestOnly.sol:RWAOracleTestOnly",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 21151,
        "contract": "contracts/test/RWAOracleTestOnly.sol:RWAOracleTestOnly",
        "label": "price",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 21153,
        "contract": "contracts/test/RWAOracleTestOnly.sol:RWAOracleTestOnly",
        "label": "timestamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}